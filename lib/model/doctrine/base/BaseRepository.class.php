<?php

/**
 * BaseRepository
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $user_id
 * @property User $User
 * @property Doctrine_Collection $Services
 * @property Doctrine_Collection $RepoServs
 * 
 * @method string              getName()      Returns the current record's "name" value
 * @method integer             getUserId()    Returns the current record's "user_id" value
 * @method User                getUser()      Returns the current record's "User" value
 * @method Doctrine_Collection getServices()  Returns the current record's "Services" collection
 * @method Doctrine_Collection getRepoServs() Returns the current record's "RepoServs" collection
 * @method Repository          setName()      Sets the current record's "name" value
 * @method Repository          setUserId()    Sets the current record's "user_id" value
 * @method Repository          setUser()      Sets the current record's "User" value
 * @method Repository          setServices()  Sets the current record's "Services" collection
 * @method Repository          setRepoServs() Sets the current record's "RepoServs" collection
 * 
 * @package    orinoco
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRepository extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('repository');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->setAttribute(Doctrine_Core::ATTR_EXPORT, Doctrine_Core::EXPORT_ALL);
        $this->setAttribute(Doctrine_Core::ATTR_VALIDATE, true);
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Service as Services', array(
             'refClass' => 'RepoServ',
             'local' => 'repository_id',
             'foreign' => 'service_id'));

        $this->hasMany('RepoServ as RepoServs', array(
             'local' => 'id',
             'foreign' => 'repository_id'));
    }
}