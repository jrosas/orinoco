<?php

/**
 * BaseQuery
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $url
 * @property string $description
 * @property integer $user_id
 * @property User $User
 * @property Doctrine_Collection $Query
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getUrl()         Returns the current record's "url" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method integer             getUserId()      Returns the current record's "user_id" value
 * @method User                getUser()        Returns the current record's "User" value
 * @method Doctrine_Collection getQuery()       Returns the current record's "Query" collection
 * @method Query               setName()        Sets the current record's "name" value
 * @method Query               setUrl()         Sets the current record's "url" value
 * @method Query               setDescription() Sets the current record's "description" value
 * @method Query               setUserId()      Sets the current record's "user_id" value
 * @method Query               setUser()        Sets the current record's "User" value
 * @method Query               setQuery()       Sets the current record's "Query" collection
 * 
 * @package    orinoco
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseQuery extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('query');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('url', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('description', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Plan as Query', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}